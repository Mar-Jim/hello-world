from fuzzywuzzy import fuzz, process
import pandas as pd

# Load data frames
df_ProCount = pd.read_csv('df_ProCount.csv')
df_SiteView = pd.read_csv('df_SiteView.csv')

# Create a dictionary with MerrickID_tanktb as key and MerrickID as value
merrickid_dict = dict(zip(df_ProCount['MerrickID_tanktb'], df_ProCount['MerrickID']))

# Create an empty column 'MerrickID' and 'confidence' in df_SiteView
df_SiteView['MerrickID'] = ''
df_SiteView['confidence'] = 0

# Define a function to get the best match from df_ProCount based on sitename and TankID
def get_best_match(row):
    sitename = row['sitename']
    TankID = row['TankID']
    
    # Get the top 5 matches based on sitename
    sitename_matches = process.extractBests(sitename, df_ProCount['TankName'], scorer=fuzz.partial_ratio, limit=5)
    
    # Get the top 5 matches based on TankID
    TankID_matches = process.extractBests(TankID, df_ProCount['TankName'], scorer=fuzz.partial_ratio, limit=5)
    
    # Merge the two lists of matches and remove duplicates
    matches = set(sitename_matches + TankID_matches)
    
    # Get the best match and its confidence level
    best_match, confidence = process.extractOne(sitename, matches, scorer=fuzz.partial_ratio)
    
    # If the confidence level is above a certain threshold, add the MerrickID to df_SiteView
    if confidence > 80:
        row['MerrickID'] = merrickid_dict[df_ProCount[df_ProCount['TankName'] == best_match]['MerrickID_tanktb'].iloc[0]]
        row['confidence'] = confidence
    
    return row

# Apply the function to each row in df_SiteView
df_SiteView = df_SiteView.apply(get_best_match, axis=1)

# Remove rows with empty MerrickID
df_SiteView = df_SiteView[df_SiteView['MerrickID'] != '']
